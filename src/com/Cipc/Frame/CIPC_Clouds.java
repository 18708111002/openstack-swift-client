/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Cipc.Frame;


import com.Cipc.Bean.Common;
import com.Cipc.Bean.UpdateCloudsTreeDB;
import com.Cipc.Bean.DisplayCipcTree;
import com.Cipc.Bean.Task;
import com.Cipc.Bean.SQLiteJDBC;
import com.Cipc.JClouds.JCloudsSwift;
import com.Cipc.TaskSwingWorker.CreateNewFolderSwingWorker;
import com.Cipc.TaskSwingWorker.DeleteSwingWorker;
import com.Cipc.TaskSwingWorker.LoopHandleTask;
import com.Cipc.TaskSwingWorker.LoopAddTask;
import java.awt.Color;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.DIRECTORIES_ONLY;
import static javax.swing.JFileChooser.SAVE_DIALOG;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException; 
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.table.TableColumn;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import org.jvnet.substance.skin.*;
import org.jvnet.substance.watermark.*;
import org.jvnet.substance.SubstanceLookAndFeel;
import org.jvnet.substance.button.StandardButtonShaper;
import org.jvnet.substance.fonts.DefaultMacFontPolicy;
import org.jvnet.substance.title.Glass3DTitlePainter;



/**
 *
 * @author Zj
 */
public class CIPC_Clouds extends javax.swing.JFrame {

    /**
     * Creates new form Test    
     */
    
    private Common common = new Common();   
    private LoopAddTask taskManager;
    private LoopHandleTask dispatchSwingWork;
   

    public CIPC_Clouds() {
        
      
       new JCloudsSwift(Common.swiftinfo).createCloudsTree(); 
       UpdateCloudsTreeDB ctb = new UpdateCloudsTreeDB(Common.swiftinfo.clouds_tree,Common.swiftinfo.fileMap);   
       DisplayCipcTree.DisplayTree(0, 0, Common.cipcTreeNode);
        
       initComponents();
       
        
        taskManager = new LoopAddTask(this.Tasklist_Table,this.file_List);
        taskManager.execute();
        dispatchSwingWork = new LoopHandleTask(this.Tasklist_Table,this.file_List);
        dispatchSwingWork.execute();
        
        
      
       
        //显示子树,运行DisplayTree(2,0);
 //       DisplayCipcTree.DisplayTree(0, 0, cipcTreeNode);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        Set_Dialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Tasklist_Dialog = new javax.swing.JDialog();
        Tasklist_Panel = new javax.swing.JPanel();
        Tasklist_ScrollPane = new javax.swing.JScrollPane();
        Tasklist_Table = new javax.swing.JTable();
        newFolderDialog = new javax.swing.JDialog();
        newFolderLabel = new javax.swing.JLabel();
        newFolderTextField = new javax.swing.JTextField();
        newFolderButton = new javax.swing.JButton();
        jPanel = new javax.swing.JPanel();
        jSeparator = new javax.swing.JSeparator();
        Upload_Button = new javax.swing.JButton();
        Upload_label = new javax.swing.JLabel();
        Download_Button = new javax.swing.JButton();
        Download_label = new javax.swing.JLabel();
        Newfolder_Button = new javax.swing.JButton();
        Newfolder_label = new javax.swing.JLabel();
        Tree_jScrollPane = new javax.swing.JScrollPane();
        File_jTree = new javax.swing.JTree();
        ListjScrollPane = new javax.swing.JScrollPane();
        file_List = new javax.swing.JList<>();
        Set_Button = new javax.swing.JButton();
        Set_label = new javax.swing.JLabel();
        Refresh_Button = new javax.swing.JButton();
        Refresh_label = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        Userinfo_Button = new javax.swing.JButton();
        Delete_Button = new javax.swing.JButton();
        Delete_label = new javax.swing.JLabel();
        TaskList_Button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        FileChooser.setFileHidingEnabled(false);
        FileChooser.setMultiSelectionEnabled(true);

        Set_Dialog.setTitle("设置");
        Set_Dialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

        jLabel2.setText("还没有写 你点啥！");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Set_DialogLayout = new javax.swing.GroupLayout(Set_Dialog.getContentPane());
        Set_Dialog.getContentPane().setLayout(Set_DialogLayout);
        Set_DialogLayout.setHorizontalGroup(
            Set_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Set_DialogLayout.setVerticalGroup(
            Set_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Tasklist_Dialog.setTitle("任务列表");

        Tasklist_Table.setModel(Common.taskTableModel);
        Tasklist_Table.setSelectionBackground(java.awt.Color.gray);
        Tasklist_ScrollPane.setViewportView(Tasklist_Table);
        TableColumn statusColumn = Tasklist_Table.getColumn("进度");
        //statusColumn.setCellRenderer(new ProgressBarRenderer());

        javax.swing.GroupLayout Tasklist_PanelLayout = new javax.swing.GroupLayout(Tasklist_Panel);
        Tasklist_Panel.setLayout(Tasklist_PanelLayout);
        Tasklist_PanelLayout.setHorizontalGroup(
            Tasklist_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tasklist_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        Tasklist_PanelLayout.setVerticalGroup(
            Tasklist_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tasklist_ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Tasklist_DialogLayout = new javax.swing.GroupLayout(Tasklist_Dialog.getContentPane());
        Tasklist_Dialog.getContentPane().setLayout(Tasklist_DialogLayout);
        Tasklist_DialogLayout.setHorizontalGroup(
            Tasklist_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tasklist_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Tasklist_DialogLayout.setVerticalGroup(
            Tasklist_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tasklist_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        newFolderLabel.setText("文件夹");

        newFolderTextField.setText("新建文件夹");
        newFolderTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFolderTextFieldActionPerformed(evt);
            }
        });

        newFolderButton.setText("确定");
        newFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFolderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newFolderDialogLayout = new javax.swing.GroupLayout(newFolderDialog.getContentPane());
        newFolderDialog.getContentPane().setLayout(newFolderDialogLayout);
        newFolderDialogLayout.setHorizontalGroup(
            newFolderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newFolderDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newFolderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newFolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newFolderButton)
                .addContainerGap())
        );
        newFolderDialogLayout.setVerticalGroup(
            newFolderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newFolderDialogLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(newFolderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newFolderLabel)
                    .addComponent(newFolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newFolderButton))
                .addGap(26, 26, 26))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("网盘");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("icon.png")));
        setName("frame"); // NOI18N
        setUndecorated(true);

        //Upload_Button.setIcon((new ImageIcon("./resourse/arrow_up.png")));
        Upload_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("arrow_up.png"))));

        Upload_Button.setBorderPainted( false );

        Upload_Button.setFocusPainted( false );

        Upload_Button.setContentAreaFilled( false );
        Upload_Button.setMargin( new Insets(0, 0, 0, 0));
        Upload_Button.setFocusable( true );
        Upload_Button.setToolTipText("上传文件");
        Upload_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Upload_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Upload_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Upload_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Upload_ButtonMouseReleased(evt);
            }
        });
        Upload_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Upload_ButtonActionPerformed(evt);
            }
        });

        Upload_label.setText("上传文件");

        Download_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("arrow_down.png"))));

        Download_Button.setBorderPainted( false );

        Download_Button.setFocusPainted( false );

        Download_Button.setContentAreaFilled( false );
        Download_Button.setMargin( new Insets(0, 0, 0, 0));
        Download_Button.setFocusable( true );
        Download_Button.setToolTipText("下载文件");
        Download_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Download_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Download_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Download_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Download_ButtonMouseReleased(evt);
            }
        });
        Download_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Download_ButtonActionPerformed(evt);
            }
        });

        Download_label.setText("下载");

        Newfolder_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("folder.png"))));

        Newfolder_Button.setBorderPainted( false );

        Newfolder_Button.setFocusPainted( false );

        Newfolder_Button.setContentAreaFilled( false );
        Newfolder_Button.setMargin( new Insets(0, 0, 0, 0));
        Newfolder_Button.setFocusable( true );
        Newfolder_Button.setToolTipText("新建文件夹");
        Newfolder_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Newfolder_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Newfolder_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Newfolder_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Newfolder_ButtonMouseReleased(evt);
            }
        });
        Newfolder_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Newfolder_ButtonActionPerformed(evt);
            }
        });

        Newfolder_label.setText("新建文件夹");

        File_jTree.setModel(new javax.swing.tree.DefaultTreeModel(Common.cipcTreeNode));
        File_jTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                File_jTreeMouseClicked(evt);
            }
        });
        File_jTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                File_jTreeValueChanged(evt);
            }
        });
        Tree_jScrollPane.setViewportView(File_jTree);
        File_jTree.setCellRenderer(new TreeNodeRenderer());

        //javax.swing.JList<FileRecordInfo> file_List = new javax.swing.JList<FileRecordInfo>();
        ListCellRenderer renderer = new FileListCell();
        file_List.setCellRenderer(renderer);
        file_List.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        file_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                file_ListMouseClicked(evt);
            }
        });
        file_List.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                file_ListValueChanged(evt);
            }
        });
        ListjScrollPane.setViewportView(file_List);
        file_List.setModel(Common.listModel);

        Set_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("options_2.png"))));

        Set_Button.setBorderPainted( false );

        Set_Button.setFocusPainted( false );

        Set_Button.setContentAreaFilled( false );
        Set_Button.setMargin( new Insets(0, 0, 0, 0));
        Set_Button.setFocusable( true );
        Set_Button.setToolTipText("网盘设置");
        Set_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Set_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Set_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Set_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Set_ButtonMouseReleased(evt);
            }
        });
        Set_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Set_ButtonActionPerformed(evt);
            }
        });

        Set_label.setText("设置");

        Refresh_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("refresh.png"))));

        Refresh_Button.setBorderPainted( false );

        Refresh_Button.setFocusPainted( false );

        Refresh_Button.setContentAreaFilled( false );
        Refresh_Button.setMargin( new Insets(0, 0, 0, 0));
        Refresh_Button.setFocusable( true );
        Refresh_Button.setToolTipText("刷新");
        Refresh_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Refresh_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Refresh_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Refresh_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Refresh_ButtonMouseReleased(evt);
            }
        });
        Refresh_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh_ButtonActionPerformed(evt);
            }
        });

        Refresh_label.setText("刷新");

        jProgressBar1.setToolTipText("网盘容量");
        jProgressBar1.setValue(37);
        jProgressBar1.setBorderPainted(false);
        jProgressBar1.setStringPainted(true);

        jLabel1.setText("容量");

        Userinfo_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("icon.png"))));

        Userinfo_Button.setBorderPainted( false );

        Userinfo_Button.setFocusPainted( false );

        Userinfo_Button.setContentAreaFilled( false );
        Userinfo_Button.setMargin( new Insets(0, 0, 0, 0));
        Userinfo_Button.setFocusable( true );

        Delete_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("trash_box.png"))));

        Delete_Button.setBorderPainted( false );

        Delete_Button.setFocusPainted( false );

        Delete_Button.setContentAreaFilled( false );
        Delete_Button.setMargin( new Insets(0, 0, 0, 0));
        Delete_Button.setFocusable( true );
        Delete_Button.setToolTipText("删除文件");
        Delete_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Delete_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Delete_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Delete_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Delete_ButtonMouseReleased(evt);
            }
        });
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });

        Delete_label.setText("删除");

        TaskList_Button.setToolTipText("任务列表");
        TaskList_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TaskList_ButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TaskList_ButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TaskList_ButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TaskList_ButtonMouseReleased(evt);
            }
        });
        TaskList_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaskList_ButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("任务列表");

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TaskList_Button))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(Userinfo_Button)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(Newfolder_label)
                                    .addComponent(Newfolder_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(Upload_label)
                                    .addComponent(Upload_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(Download_label)
                                    .addComponent(Download_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(Set_label)
                                    .addComponent(Set_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(Delete_label)
                                    .addComponent(Delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(Refresh_label)
                                    .addComponent(Refresh_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Tree_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ListjScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(323, 323, 323))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(Userinfo_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(29, 29, 29)
                        .addComponent(TaskList_Button))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(Newfolder_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Newfolder_label))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(Upload_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Upload_label))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(Download_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Download_label))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(Set_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Set_label))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(Delete_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Delete_label))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(Refresh_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Refresh_label)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tree_jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                            .addComponent(ListjScrollPane))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(6, 6, 6))
        );

        TaskList_Button.setIcon((new ImageIcon(ClassLoader.getSystemResource("forward.png"))));

        TaskList_Button.setBorderPainted( false );
        TaskList_Button.setFocusPainted( false );
        TaskList_Button.setContentAreaFilled( false );
        TaskList_Button.setMargin( new Insets(0, 0, 0, 0));
        TaskList_Button.setFocusable( true );
        TaskList_Button.setSize(18, 25);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 746, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TaskList_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaskList_ButtonActionPerformed
        // TODO add your handling code here:
        Tasklist_Dialog.setLocationRelativeTo(this);
        Tasklist_Dialog.setSize(500, 600);
        Tasklist_Dialog.setVisible(true);

        //Tasklist_Table.get

    }//GEN-LAST:event_TaskList_ButtonActionPerformed

    private void TaskList_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskList_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(TaskList_Button);
    }//GEN-LAST:event_TaskList_ButtonMouseReleased

    private void TaskList_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskList_ButtonMousePressed
        // TODO add your handling code here:\
        this.mousePressed(TaskList_Button);
    }//GEN-LAST:event_TaskList_ButtonMousePressed

    private void TaskList_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskList_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(TaskList_Button);
    }//GEN-LAST:event_TaskList_ButtonMouseExited

    private void TaskList_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskList_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(TaskList_Button);
    }//GEN-LAST:event_TaskList_ButtonMouseEntered

    private void Refresh_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh_ButtonActionPerformed
        // TODO add your handling code here:
        // new RefreshSWingWorker(cipcTreeNode,this.tasl).execute();

    }//GEN-LAST:event_Refresh_ButtonActionPerformed

    private void Refresh_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Refresh_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(Refresh_Button);
    }//GEN-LAST:event_Refresh_ButtonMouseReleased

    private void Refresh_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Refresh_ButtonMousePressed
        // TODO add your handling code here:
        this.mousePressed(Refresh_Button);
    }//GEN-LAST:event_Refresh_ButtonMousePressed

    private void Refresh_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Refresh_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(Refresh_Button);
    }//GEN-LAST:event_Refresh_ButtonMouseExited

    private void Refresh_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Refresh_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(Refresh_Button);
    }//GEN-LAST:event_Refresh_ButtonMouseEntered

    private void Set_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Set_ButtonActionPerformed
        // TODO add your handling code here:
        Set_Dialog.setLocationRelativeTo(this);
        Set_Dialog.setSize(400, 300);
        Set_Dialog.setModal(true);
        Set_Dialog.setVisible(true);

    }//GEN-LAST:event_Set_ButtonActionPerformed

    private void Set_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(Set_Button);
    }//GEN-LAST:event_Set_ButtonMouseReleased

    private void Set_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set_ButtonMousePressed
        // TODO add your handling code here:
        this.mousePressed(Set_Button);
    }//GEN-LAST:event_Set_ButtonMousePressed

    private void Set_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(Set_Button);
    }//GEN-LAST:event_Set_ButtonMouseExited

    private void Set_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Set_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(Set_Button);
    }//GEN-LAST:event_Set_ButtonMouseEntered

    private void file_ListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_file_ListValueChanged
        // TODO add your handling code here:
        //int index = evt.();

        int index =  file_List.getSelectedIndex();
        String  str = file_List.getSelectedValue();
        //String str = String.valueOf(index);

        // JOptionPane.showMessageDialog(null,str, "help", JOptionPane.PLAIN_MESSAGE);

    }//GEN-LAST:event_file_ListValueChanged

    private void file_ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_file_ListMouseClicked
        // TODO add your handling code here:
        /*
        file_List.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        int index = file_List.getSelectedIndex();
        String str =  String.valueOf(index);
        //String  str = listModel.getSelectedValue();
        JOptionPane.showMessageDialog(null,str, "help", JOptionPane.PLAIN_MESSAGE);
        */

    }//GEN-LAST:event_file_ListMouseClicked

    private void File_jTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_File_jTreeValueChanged
        // TODO add your handling code here:

        TreePath path = evt.getPath(); // 得到选择路径
        String split[] ;
        String info = path.toString();
        info = info.substring(1,info.length() - 1); // 得到选择的路径各节点名称

        DefaultMutableTreeNode node = (DefaultMutableTreeNode) File_jTree.getLastSelectedPathComponent();
        if (node == null)
        return;
        Object object = node.getUserObject();
        if (node.isLeaf() || true) {

            split = info.split(",");
            info = "";

            for(int i = 1 ; i < split.length ; i ++)
            {
                info += split[i] + "/";
            }

            Common.selectTreePath = info;
            SQLiteJDBC sql = new SQLiteJDBC();
            sql.setFileListModel(Common.listModel, info);
    
            this.file_List.updateUI();

        }
        else{

        }
    }//GEN-LAST:event_File_jTreeValueChanged

    private void File_jTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_File_jTreeMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_File_jTreeMouseClicked

    private void Newfolder_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Newfolder_ButtonActionPerformed
        // TODO add your handling code here:
   
        
         if(Common.selectTreePath != null )
        {
            newFolderDialog.setLocationRelativeTo(this);
            //width ,high
            newFolderDialog.setSize(280, 150);
            newFolderDialog.setModal(true);
            newFolderDialog.setVisible(true);
     //JOptionPane.showMessageDialog(null,Common.selectTreePath.equals(""), "PLAIN_MESSAGE", JOptionPane.PLAIN_MESSAGE);
        }
         else
         {
             JOptionPane.showMessageDialog(null,"请选择父目录！", "PLAIN_MESSAGE", JOptionPane.PLAIN_MESSAGE);
         }

    }//GEN-LAST:event_Newfolder_ButtonActionPerformed

    private void Newfolder_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Newfolder_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(Newfolder_Button);
    }//GEN-LAST:event_Newfolder_ButtonMouseReleased

    private void Newfolder_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Newfolder_ButtonMousePressed
        // TODO add your handling code here:
        this.mousePressed(Newfolder_Button);
    }//GEN-LAST:event_Newfolder_ButtonMousePressed

    private void Newfolder_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Newfolder_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(Newfolder_Button);
    }//GEN-LAST:event_Newfolder_ButtonMouseExited

    private void Newfolder_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Newfolder_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(Newfolder_Button);
    }//GEN-LAST:event_Newfolder_ButtonMouseEntered

    private void multiplyFileDown(List<String> selectList){
        File dir = new File("..");
        JFileChooser downFileChooser = new JFileChooser() ;
        downFileChooser.setSelectedFile(dir);
        downFileChooser.setFileSelectionMode(DIRECTORIES_ONLY);
        downFileChooser.setDialogType(SAVE_DIALOG);
        int retval = downFileChooser.showSaveDialog(downFileChooser);
        
         if (retval == FileChooser.APPROVE_OPTION ) {
             
             String  downDir = downFileChooser.getSelectedFile().getPath();
 
             for(String file:selectList ){
                
                String str = Common.selectTreePath + file;
                String path[] = str.split("/");
                String container = path[0].trim();
                String fileName = path[1];

                for(int i = 2 ; i < path.length ; i ++)
                    {
                        fileName += "/" + path[i] ;
                    }

               // int type,String srcPath,String desPath,String fileName,String selectPath

               Task task = new Task(Task.TYPE_DOWNLOAD,downDir + "/" + file ,path[0].trim(),fileName.trim(),Common.selectTreePath);

               Common.taskMap.put(task.taskID, task);
             } 
             Common.sem_updated.release();
         }
    }
    private void  singleFileDown(){
        
        File dir = new File( file_List.getSelectedValue().toString());
        JFileChooser downFileChooser = new JFileChooser() ;
        downFileChooser.setSelectedFile(dir);
        downFileChooser.setDialogType(SAVE_DIALOG);
       
        
        int retval = downFileChooser.showSaveDialog(downFileChooser);
        
         if (retval == FileChooser.APPROVE_OPTION ) {
            File file = downFileChooser.getSelectedFile();
            
            String  str = Common.selectTreePath + file_List.getSelectedValue().toString();
            String path[] = str.split("/");
            String container = path[0].trim();
            String fileName = path[1];

            for(int i = 2 ; i < path.length ; i ++)
                {
                    fileName += "/" + path[i] ;
                }

           // int type,String srcPath,String desPath,String fileName,String selectPath

           Task task = new Task(Task.TYPE_DOWNLOAD,file.getPath(),path[0].trim(),fileName.trim(),Common.selectTreePath);

           Common.taskMap.put(task.taskID, task);
           Common.sem_updated.release();
           
         }
        
    }
    private void Download_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Download_ButtonActionPerformed
        // TODO add your handling code here:
        
        if(file_List.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null,"请选择要下载的文件 ！", "提示", JOptionPane.PLAIN_MESSAGE);
            
            return;
        }
        
        List<String> selectList = file_List.getSelectedValuesList();
        
        
        if(selectList.size() > 1)
            multiplyFileDown(selectList);
        else
            singleFileDown();
            
        
    }//GEN-LAST:event_Download_ButtonActionPerformed

    private void Download_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Download_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(Download_Button);
    }//GEN-LAST:event_Download_ButtonMouseReleased

    private void Download_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Download_ButtonMousePressed
        // TODO add your handling code here:
        this.mousePressed(Download_Button);
    }//GEN-LAST:event_Download_ButtonMousePressed

    private void Download_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Download_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(Download_Button);
    }//GEN-LAST:event_Download_ButtonMouseExited

    private void Download_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Download_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(Download_Button);
    }//GEN-LAST:event_Download_ButtonMouseEntered

    private void singleFileUp(){
         File file = FileChooser.getSelectedFile();
         String  path[] = Common.selectTreePath.split("/");
         String fileName = "";

         for(int i = 1 ; i < path.length; i ++)
            fileName +=  path[i].trim() + "/";
         
        fileName += file.getName().trim();

        Task task = new Task(Task.TYPE_UPLOAD,file.getPath(),path[0].trim(),fileName.trim(),Common.selectTreePath);

        Common.taskMap.put(task.taskID, task);
        Common.sem_updated.release();
        
    }
    
     private void multiplyFileUp(File[]  fileList){
       
         for(int k = 0 ; k < fileList.length ; k ++){
         
            String  path[] = Common.selectTreePath.split("/");
            String fileName = "";

            for(int i = 1 ; i < path.length; i ++)
               fileName +=  path[i].trim() + "/";

           fileName += fileList[k].getName().trim();

           Task task = new Task(Task.TYPE_UPLOAD,fileList[k].getPath(),path[0].trim(),fileName.trim(),Common.selectTreePath);

           Common.taskMap.put(task.taskID, task);
         }
         
         Common.sem_updated.release();
         
     }
    private void Upload_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Upload_ButtonActionPerformed
        // TODO add your handling code here:
        if(Common.selectTreePath != null)
        {

            int retval = FileChooser.showOpenDialog(FileChooser);
            
            if (retval == FileChooser.APPROVE_OPTION) {
                    
              File[]  fileList = FileChooser.getSelectedFiles() ;
              
            
              if(fileList.length > 1)
                  multiplyFileUp(fileList);
              else
                  singleFileUp();
            }

        }
        else{
            JOptionPane.showMessageDialog(null,"请选择目录！", "PLAIN_MESSAGE", JOptionPane.PLAIN_MESSAGE);
        }

        //JOptionPane.showMessageDialog(null, file.getName() + "上传成功", "PLAIN_MESSAGE", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_Upload_ButtonActionPerformed

    private void Upload_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Upload_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(Upload_Button);
    }//GEN-LAST:event_Upload_ButtonMouseReleased

    private void Upload_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Upload_ButtonMousePressed
        // TODO add your handling code here:
        this.mousePressed(Upload_Button);
    }//GEN-LAST:event_Upload_ButtonMousePressed

    private void Upload_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Upload_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(Upload_Button);
    }//GEN-LAST:event_Upload_ButtonMouseExited

    private void Upload_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Upload_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(Upload_Button);
    }//GEN-LAST:event_Upload_ButtonMouseEntered

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
        // TODO add your handling code here:
         
    if(file_List.isSelectionEmpty()){
        
        JOptionPane.showMessageDialog(null,"请选择要删除的文件 ！", "提示", JOptionPane.PLAIN_MESSAGE);  
        return;
    }
        
    List<String> selectList = file_List.getSelectedValuesList();
    List<Task>  deleteTask = new  ArrayList<Task>();
    
    
     for(String file:selectList ){
                
                String str = Common.selectTreePath + file;
                String path[] = str.split("/");
                String container = path[0].trim();
                String fileName = path[1].trim();

                for(int i = 2 ; i < path.length ; i ++)
                    {
                        fileName += "/" + path[i] ;
                    }
        deleteTask.add(new Task(Task.TYPE_DELETE,"",container,fileName,Common.selectTreePath));  
    }
        
     new DeleteSwingWorker(deleteTask,file_List).execute();
    
    }//GEN-LAST:event_Delete_ButtonActionPerformed

    private void Delete_ButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ButtonMouseEntered
        // TODO add your handling code here:
        this.mouseEntered(this.Delete_Button);
    }//GEN-LAST:event_Delete_ButtonMouseEntered

    private void Delete_ButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ButtonMouseExited
        // TODO add your handling code here:
        this.mouseExited(this.Delete_Button);
    }//GEN-LAST:event_Delete_ButtonMouseExited

    private void Delete_ButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ButtonMousePressed
        // TODO add your handling code here:
        this.mousePressed(this.Delete_Button);
    }//GEN-LAST:event_Delete_ButtonMousePressed

    private void Delete_ButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ButtonMouseReleased
        // TODO add your handling code here:
        this.mouseReleased(this.Delete_Button);
    }//GEN-LAST:event_Delete_ButtonMouseReleased

    private void newFolderTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFolderTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newFolderTextFieldActionPerformed

    private void newFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFolderButtonActionPerformed
        // TODO add your handling code here:
        new CreateNewFolderSwingWorker(Common.selectTreePath.trim(),this.newFolderTextField.getText().trim(),this.File_jTree).execute();
        this.newFolderDialog.setVisible(false);
    }//GEN-LAST:event_newFolderButtonActionPerformed
    
    ///实现按钮凸显效果
   private void mousePressed(javax.swing.JButton btn) {
		// TODO Auto-generated method stub
		Border etchedBorder = new EtchedBorder(EtchedBorder.RAISED);// 设置边框凸显
		btn.setBorder(etchedBorder);
	}
   private void mouseReleased(javax.swing.JButton btn) {
		// TODO Auto-generated method stub
		
		Border etchedBorder = new EtchedBorder(EtchedBorder.LOWERED);// 设置边框凹显
		btn.setBorder(etchedBorder);
	}
   private void mouseEntered(javax.swing.JButton btn) {
		// TODO Auto-generated method stub
		btn.setForeground(new Color(0x33, 0x66, 0xcc));// 设置字体颜色
		btn.setBorderPainted(true);// 显示边框
		Border etchedBorder = new EtchedBorder(EtchedBorder.LOWERED);// 设置边框凹显
		btn.setBorder(etchedBorder);
		btn.setRolloverEnabled(true);
	}	
   private void mouseExited(javax.swing.JButton btn) {
		// TODO Auto-generated method stub
		btn.setForeground(Color.black);// 设置字体颜色
		btn.setBorderPainted(false);// 隐藏边框
	}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */  
  
               //   pt.
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CIPC_Clouds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CIPC_Clouds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CIPC_Clouds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CIPC_Clouds.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        try {
            /*
            UIManager.setLookAndFeel( new SubstanceSaharaLookAndFeel());
            JFrame.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            SubstanceSaharaLookAndFeel.setSkin(new CremeSkin());
            SubstanceSaharaLookAndFeel.setCurrentButtonShaper(new StandardButtonShaper());
            SubstanceSaharaLookAndFeel.setFontPolicy(new DefaultMacFontPolicy());
            SubstanceLookAndFeel.setCurrentWatermark(new SubstanceMetalWallWatermark());
            SubstanceLookAndFeel.setCurrentTitlePainter(new Glass3DTitlePainter());
            */
            
            org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
            UIManager.put("RootPane.setupButtonVisible",false);
            //</editor-fold>
        } catch (Exception ex) {
            Logger.getLogger(CIPC_Clouds.class.getName()).log(Level.SEVERE, null, ex);
        }
        
             
      
         new LoginView().setVisible(true);
        /* Create and display the form */
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

              CIPC_Clouds  cipc_clouds = new CIPC_Clouds();
              cipc_clouds.setLocationRelativeTo(null);
              cipc_clouds.setVisible(true);    
              cipc_clouds.setResizable(false); 
     
            }
        });
*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete_Button;
    private javax.swing.JLabel Delete_label;
    private javax.swing.JButton Download_Button;
    private javax.swing.JLabel Download_label;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JTree File_jTree;
    private javax.swing.JScrollPane ListjScrollPane;
    private javax.swing.JButton Newfolder_Button;
    private javax.swing.JLabel Newfolder_label;
    private javax.swing.JButton Refresh_Button;
    private javax.swing.JLabel Refresh_label;
    private javax.swing.JButton Set_Button;
    private javax.swing.JDialog Set_Dialog;
    private javax.swing.JLabel Set_label;
    private javax.swing.JButton TaskList_Button;
    private javax.swing.JDialog Tasklist_Dialog;
    private javax.swing.JPanel Tasklist_Panel;
    private javax.swing.JScrollPane Tasklist_ScrollPane;
    private javax.swing.JTable Tasklist_Table;
    private javax.swing.JScrollPane Tree_jScrollPane;
    private javax.swing.JButton Upload_Button;
    private javax.swing.JLabel Upload_label;
    private javax.swing.JButton Userinfo_Button;
    private javax.swing.JList<String> file_List;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JButton newFolderButton;
    private javax.swing.JDialog newFolderDialog;
    private javax.swing.JLabel newFolderLabel;
    private javax.swing.JTextField newFolderTextField;
    // End of variables declaration//GEN-END:variables
}
